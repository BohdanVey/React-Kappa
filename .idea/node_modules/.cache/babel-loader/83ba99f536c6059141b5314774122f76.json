{"ast":null,"code":"var _jsxFileName = \"/home/bohdan/Documents/tmp/WEB/React-Kappa/src/router.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport LogInView from \"./views/LogInForm\";\nimport SignInView from \"./views/SignInForm\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport UserCardView from \"./views/UserProfile\";\nimport ExpedCardView from \"./views/ExpedProfile\";\nimport Explore from \"./views/Explore/Explore\";\nimport Main from \"./views/Main/Main\";\nimport Expedition from \"./views/Expedition/Expedition\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useLocation, useHistory } from \"react-router-dom\";\nimport { authContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000000\"\n    },\n    secondary: {\n      main: \"#ffffff\"\n    }\n  }\n});\nconst userProfile = {\n  logined: 1,\n  fullName: \"Nill Armstrong\",\n  userName: \"nill_armstrong\",\n  email: \"alex@gmail.com\",\n  phone: \"+380991234567\",\n  about: \"A modest simple guy on the mars\",\n  imgSource: \"https://i.imgur.com/bxgzvrp.jpg\",\n  status: \"Astronaut\",\n  expeditions: [{\n    expeditionName: \"First expedition\",\n    description: \"This is the first expedition of Nill\"\n  }, {\n    expeditionName: \"Second expedition\",\n    description: \"This is the second expedition of Nill\"\n  }]\n};\n\nfunction Login(fakeAuth) {\n  _s();\n\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n  const {\n    state\n  } = useLocation();\n\n  const login = () => fakeAuth.authenticate(() => {\n    setRedirectToReferrer(true);\n  });\n\n  if (redirectToReferrer === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: (state === null || state === void 0 ? void 0 : state.from) || '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You must log in to view the page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"TdFAcy/lXV2SnM5oVsBPHJZ6i6w=\", false, function () {\n  return [useLocation];\n});\n\n_c = Login;\n\nconst Routes = () => {\n  _s2();\n\n  const [isAuthenticated, setAuth] = useState(false);\n\n  function PrivateRoute({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: ({\n        location\n      }) => {\n        return isAuthenticated === true ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n  const fakeAuth = {\n    authenticate(cb) {\n      // implement identity check  \n      console.log('auth try');\n      setAuth(true);\n      setTimeout(cb, 100); // fake async\n\n      console.log('is auth?  ' + isAuthenticated);\n    },\n\n    signout(cb) {\n      setAuth(false);\n    }\n\n  }; // const auth(cb) {\n  //     setAuth(true)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/main\",\n            children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/explore\",\n            children: /*#__PURE__*/_jsxDEV(Explore, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/expedition\",\n            children: /*#__PURE__*/_jsxDEV(Expedition, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logIn\",\n            children: /*#__PURE__*/_jsxDEV(authContext.Provider, {\n              value: fakeAuth,\n              children: /*#__PURE__*/_jsxDEV(LogInView, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signIn\",\n            children: /*#__PURE__*/_jsxDEV(SignInView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/user\",\n            children: /*#__PURE__*/_jsxDEV(UserCardView, {\n              userProfile: userProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/exped\",\n            children: /*#__PURE__*/_jsxDEV(ExpedCardView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Routes, \"neqGEcjrC9R3wz2Jw3DYPkrNf30=\");\n\n_c2 = Routes;\nexport default Routes; // reportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Routes\");","map":{"version":3,"sources":["/home/bohdan/Documents/tmp/WEB/React-Kappa/src/router.js"],"names":["React","useState","LogInView","SignInView","createMuiTheme","ThemeProvider","UserCardView","ExpedCardView","Explore","Main","Expedition","reportWebVitals","BrowserRouter","Router","Switch","Route","Link","Redirect","useLocation","useHistory","authContext","theme","palette","primary","main","secondary","userProfile","logined","fullName","userName","email","phone","about","imgSource","status","expeditions","expeditionName","description","Login","fakeAuth","redirectToReferrer","setRedirectToReferrer","state","login","authenticate","from","Routes","isAuthenticated","setAuth","PrivateRoute","children","rest","location","pathname","cb","console","log","setTimeout","signout"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,WANF,EAOEC,UAPF,QAQO,kBARP;AASA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,KAAK,GAAGjB,cAAc,CAAC;AAC3BkB,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KADF;AAIPC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG;AAJJ;AADkB,CAAD,CAA5B;AAWA,MAAME,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,CADS;AAElBC,EAAAA,QAAQ,EAAE,gBAFQ;AAGlBC,EAAAA,QAAQ,EAAE,gBAHQ;AAKlBC,EAAAA,KAAK,EAAE,gBALW;AAMlBC,EAAAA,KAAK,EAAE,eANW;AAOlBC,EAAAA,KAAK,EAAE,iCAPW;AAQlBC,EAAAA,SAAS,EAAE,iCARO;AASlBC,EAAAA,MAAM,EAAE,WATU;AAUlBC,EAAAA,WAAW,EAAE,CACX;AACEC,IAAAA,cAAc,EAAE,kBADlB;AAEEC,IAAAA,WAAW,EAAE;AAFf,GADW,EAKX;AACED,IAAAA,cAAc,EAAE,mBADlB;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALW;AAVK,CAApB;;AAsBA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAAA;;AACrB,QAAM,CACJC,kBADI,EAEJC,qBAFI,IAGFxC,QAAQ,CAAC,KAAD,CAHZ;AAKA,QAAM;AAAEyC,IAAAA;AAAF,MAAYxB,WAAW,EAA7B;;AAEA,QAAMyB,KAAK,GAAG,MAAMJ,QAAQ,CAACK,YAAT,CAAsB,MAAM;AAC9CH,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFmB,CAApB;;AAIA,MAAID,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,IAAP,KAAe;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtBML,K;UAMapB,W;;;KANboB,K;;AA4BT,MAAMQ,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,eAAD,EAAkBC,OAAlB,IAA6B/C,QAAQ,CAAC,KAAD,CAA3C;;AAEA,WAASgD,YAAT,CAAsB;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAtB,EAA6C;AACzC,wBACI,QAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAkB;AACvC,eAAOL,eAAe,KAAK,IAApB,GACLG,QADK,gBAEL,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACZG,YAAAA,QAAQ,EAAE,QADE;AAEZX,YAAAA,KAAK,EAAE;AAAEG,cAAAA,IAAI,EAAEO;AAAR;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAMH;AAPD;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;;AAEL,QAAMb,QAAQ,GAAG;AAEbK,IAAAA,YAAY,CAACU,EAAD,EAAK;AACf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAS,MAAAA,UAAU,CAACH,EAAD,EAAK,GAAL,CAAV,CAJe,CAIK;;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeT,eAA3B;AACD,KARY;;AAUbW,IAAAA,OAAO,CAACJ,EAAD,EAAK;AACVN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAZY,GAAjB,CAhBiB,CA+BjB;AAEA;AACA;;AAEA,sBACI,QAAC,KAAD,CAAO,UAAP;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAE3B,KAAtB;AAAA,6BACA,QAAC,MAAD;AAAA,+BACI,QAAC,MAAD;AAAA,kCACA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,OAAnB;AAAA,mCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJA,eAOA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,aAAZ;AAAA,mCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPA,eAUA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA,mCACI,QAAC,WAAD,CAAa,QAAb;AAAsB,cAAA,KAAK,EAAEkB,QAA7B;AAAA,qCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVA,eAeA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA,mCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAfA,eAkBA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,OAAnB;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,WAAW,EAAEb;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlBA,eAqBA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA,mCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CArED;;IAAMoB,M;;MAAAA,M;AAuEN,eAAeA,MAAf,C,CACA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport LogInView from \"./views/LogInForm\";\nimport SignInView from \"./views/SignInForm\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport UserCardView from \"./views/UserProfile\";\nimport ExpedCardView from \"./views/ExpedProfile\";\n\nimport Explore from \"./views/Explore/Explore\";\nimport Main from \"./views/Main/Main\";\nimport Expedition from \"./views/Expedition/Expedition\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\nimport { authContext } from \"./context\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000000\",\n    },\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nconst userProfile = {\n  logined: 1,\n  fullName: \"Nill Armstrong\",\n  userName: \"nill_armstrong\",\n\n  email: \"alex@gmail.com\",\n  phone: \"+380991234567\",\n  about: \"A modest simple guy on the mars\",\n  imgSource: \"https://i.imgur.com/bxgzvrp.jpg\",\n  status: \"Astronaut\",\n  expeditions: [\n    {\n      expeditionName: \"First expedition\",\n      description: \"This is the first expedition of Nill\"\n    },\n    {\n      expeditionName: \"Second expedition\",\n      description: \"This is the second expedition of Nill\"\n    },\n  ]\n}\n\nfunction Login(fakeAuth) {\n    const [\n      redirectToReferrer,\n      setRedirectToReferrer\n    ] = useState(false)\n  \n    const { state } = useLocation()\n  \n    const login = () => fakeAuth.authenticate(() => {\n      setRedirectToReferrer(true)\n    })\n\n    if (redirectToReferrer === true) {\n      return <Redirect to={state?.from || '/'} />\n    }\n\n    return (\n      <div>\n        <p>You must log in to view the page</p>\n        <button onClick={login}>Log in</button>\n      </div>\n    )\n  }\n\n\n\n        \n        \nconst Routes = () => {\n    const [isAuthenticated, setAuth] = useState(false)\n\n    function PrivateRoute({ children, ...rest }) {\n        return (\n            <Route {...rest} render={({ location }) => {\n                return isAuthenticated === true\n                ? children\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: location }\n                }} />\n            }} />\n            )\n        }\n        \n    const fakeAuth = {\n        \n        authenticate(cb) {\n          // implement identity check  \n          console.log('auth try')\n          setAuth(true)\n          setTimeout(cb, 100) // fake async\n          console.log('is auth?  ' + isAuthenticated)\n        },\n    \n        signout(cb) {\n          setAuth(false)\n        }\n    }\n\n    // const auth(cb) {\n\n    //     setAuth(true)\n    // }\n    \n    return(\n        <React.StrictMode>\n            <ThemeProvider theme={theme}>\n            <Router>\n                <Switch>\n                <PrivateRoute path=\"/main\">\n                    <Main />\n                </PrivateRoute>\n                <Route path=\"/explore\">\n                    <Explore />\n                </Route>\n                <Route path=\"/expedition\">\n                    <Expedition />\n                </Route>\n                <Route path=\"/logIn\">\n                    <authContext.Provider value={fakeAuth}>\n                        <LogInView />\n                    </authContext.Provider>\n                </Route>\n                <Route path=\"/signIn\">\n                    <SignInView />\n                </Route>\n                <PrivateRoute path=\"/user\">\n                    <UserCardView userProfile={userProfile}/>\n                </PrivateRoute>\n                <Route path=\"/exped\">\n                    <ExpedCardView />\n                </Route>\n                </Switch>\n            </Router>\n            </ThemeProvider>\n        </React.StrictMode>\n  );\n}\n\nexport default Routes;\n// reportWebVitals();\n"]},"metadata":{},"sourceType":"module"}